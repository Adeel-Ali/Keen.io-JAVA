/*
 * KeenIoLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 11/14/2016
 */
package io.keen.api.models;

import java.util.*;

public class GetEventCollectionResourceInputBuilder {
    //the instance to build
    private GetEventCollectionResourceInput getEventCollectionResourceInput;

    /**
     * Default constructor to initialize the instance
     */
    public GetEventCollectionResourceInputBuilder() {
        getEventCollectionResourceInput = new GetEventCollectionResourceInput();
    }

    public GetEventCollectionResourceInputBuilder eventCollection(String eventCollection) {
        getEventCollectionResourceInput.setEventCollection(eventCollection);
        return this;
    }

    public GetEventCollectionResourceInputBuilder projectId(String projectId) {
        getEventCollectionResourceInput.setProjectId(projectId);
        return this;
    }

    public GetEventCollectionResourceInputBuilder version(String version) {
        getEventCollectionResourceInput.setVersion(version);
        return this;
    }

    /**
     * The event body you want to save to Keen IO, URL-encoded AND base-64 encoded
     */
    public GetEventCollectionResourceInputBuilder data(String data) {
        getEventCollectionResourceInput.setData(data);
        return this;
    }

    /**
     * he filters to use when deleting events. See Filters for more information.
     */
    public GetEventCollectionResourceInputBuilder filters(String filters) {
        getEventCollectionResourceInput.setFilters(filters);
        return this;
    }

    /**
     * The URL you want to redirect the user to after the event is saved. If you don?t include a protocol (http:// or https://), we?ll automatically add that for you.
     */
    public GetEventCollectionResourceInputBuilder redirect(String redirect) {
        getEventCollectionResourceInput.setRedirect(redirect);
        return this;
    }

    /**
     * The timeframe to use when deleting events. See Timeframe for more information.
     */
    public GetEventCollectionResourceInputBuilder timeframe(String timeframe) {
        getEventCollectionResourceInput.setTimeframe(timeframe);
        return this;
    }

    /**
     * The timezone to use when specifying a timeframe (while deleting events). See Timezone for more information.
     */
    public GetEventCollectionResourceInputBuilder timezone(String timezone) {
        getEventCollectionResourceInput.setTimezone(timezone);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetEventCollectionResourceInput build() {
        return getEventCollectionResourceInput;
    }
}