/*
 * KeenIoLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 11/14/2016
 */
package io.keen.api.models;

import java.util.*;

public class OperatorsBuilder {
    //the instance to build
    private Operators operators;

    /**
     * Default constructor to initialize the instance
     */
    public OperatorsBuilder() {
        operators = new Operators();
    }

    /**
     * Whether or not the string property value contains the given set of characters
     */
    public OperatorsBuilder contains(String contains) {
        operators.setContains(contains);
        return this;
    }

    /**
     * Equal to. Note that if your property?s value is an array, ?eq? can be used to filter for values inside that array. For example, eq: 5 will match a value of [5, 6, 7].
     */
    public OperatorsBuilder eq(String eq) {
        operators.setEq(eq);
        return this;
    }

    /**
     * Whether or not a specific property exists on an event record. When using the ?exists? operator, the value passed in must be either ?true? or ?false?
     */
    public OperatorsBuilder exists(String exists) {
        operators.setExists(exists);
        return this;
    }

    /**
     * Greater than.
     */
    public OperatorsBuilder gt(String gt) {
        operators.setGt(gt);
        return this;
    }

    /**
     * Greater than or equal to.
     */
    public OperatorsBuilder gte(String gte) {
        operators.setGte(gte);
        return this;
    }

    /**
     * Whether or not the property value is in a given set of values. When using the ?in? operator, the value must be a JSON array of values. Example: [1,2,4,5]
     */
    public OperatorsBuilder in(String in) {
        operators.setIn(in);
        return this;
    }

    /**
     * Less than
     */
    public OperatorsBuilder lt(String lt) {
        operators.setLt(lt);
        return this;
    }

    /**
     * Less than or equal to
     */
    public OperatorsBuilder lte(String lte) {
        operators.setLte(lte);
        return this;
    }

    /**
     * Not equal to
     */
    public OperatorsBuilder ne(String ne) {
        operators.setNe(ne);
        return this;
    }

    /**
     * Whether or not the string property value does not contain the given set of characters.
     */
    public OperatorsBuilder notContains(String notContains) {
        operators.setNotContains(notContains);
        return this;
    }

    /**
     * sed to select events within a certain radius of the provided geo coordinate (for geo analysis only).
     */
    public OperatorsBuilder within(String within) {
        operators.setWithin(within);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public Operators build() {
        return operators;
    }
}